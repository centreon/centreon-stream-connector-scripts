name: package-nfpm
description: Package module using nfpm
inputs:
  nfpm_file_pattern:
    description: The pattern of the nfpm configuration file(s)
    required: true
  package_extension:
    description: The package extension (deb or rpm)
    required: true
  distrib:
    description: The package distrib
    required: true
  version:
    description: The version
    required: false
  release:
    description: The package release number
    required: false
    default: "1"
  arch:
    description: The package architecture
    required: false
  commit_hash:
    description: The commit hash
    required: true
  cache_key:
    description: The package files cache key
    required: true
  rpm_gpg_key:
    description: The rpm gpg key
    required: true
  rpm_gpg_signing_key_id:
    description: The rpm gpg signing key identifier
    required: true
  rpm_gpg_signing_passphrase:
    description: The rpm gpg signing passphrase
    required: true
  stability:
    description: "Branch stability (stable, testing, unstable, canary)"
    required: true

runs:
  using: composite

  steps:
    - name: Import gpg key
      env:
        RPM_GPG_SIGNING_KEY: ${{ inputs.rpm_gpg_key }}
      run: echo -n "$RPM_GPG_SIGNING_KEY" > key.gpg
      shell: bash

    - name: Build ${{ inputs.package_extension }} files
      env:
        RPM_GPG_SIGNING_KEY_ID: ${{ inputs.rpm_gpg_signing_key_id }}
        RPM_GPG_SIGNING_PASSPHRASE: ${{ inputs.rpm_gpg_signing_passphrase }}
      run: |
        export VERSION="${{ inputs.version }}"
        export RELEASE="${{ inputs.release }}"
        export ARCH="${{ inputs.arch }}"

        if  [ "${{ inputs.package_extension }}" = "rpm" ]; then
          export DIST=".${{ inputs.distrib }}"
        else
          export DIST=""
          if [ "${{ inputs.stability }}" = "unstable" ] || [ "${{ inputs.stability }}" = "canary" ]; then
            export RELEASE="$RELEASE~${{ inputs.distrib }}"
          else
            export RELEASE="1~${{ inputs.distrib }}"
          fi
        fi

        luaver=$(lua -e "print(string.sub(_VERSION, 5))" 2>/dev/null || echo 0)
        echo "luaver is $luaver"
        if [ $luaver = "0" ]; then
          echo "Cannot get lua version"
          exit 1
        fi

        export RPM_SIGNING_KEY_FILE="$(pwd)/key.gpg"
        export RPM_SIGNING_KEY_ID="$RPM_GPG_SIGNING_KEY_ID"
        export NFPM_RPM_PASSPHRASE="$RPM_GPG_SIGNING_PASSPHRASE"

        for FILE in ${{ inputs.nfpm_file_pattern }}; do
          DIRNAME=$(dirname $FILE)
          BASENAME=$(basename $FILE)
          cd $DIRNAME
          sed -i "s/@luaver@/$luaver/g" $BASENAME
          sed -i "s/@COMMIT_HASH@/${{ inputs.commit_hash }}/g" $BASENAME
          nfpm package --config $BASENAME --packager ${{ inputs.package_extension }}
          cd -
          mv $DIRNAME/*.${{ inputs.package_extension }} ./
        done
      shell: bash

    - name: Cache packages
      uses: actions/cache/save@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
      with:
        path: ./*.${{ inputs.package_extension }}
        key: ${{ inputs.cache_key }}

    # Update if condition to true to get packages as artifacts
    - if: ${{ false }}
      name: Upload package artifacts
      uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
      with:
        name: packages-${{ inputs.distrib }}
        path: ./*.${{ inputs.package_extension}}
        retention-days: 1
