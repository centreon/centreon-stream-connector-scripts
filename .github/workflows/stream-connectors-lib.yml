name: stream-connectors-lib

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - modules/centreon-stream-connectors-lib/**
  push:
    branches:
      - develop
      - master
    paths:
      - modules/centreon-stream-connectors-lib/**

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml

  package:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [el8, el9, bullseye]
        include:
          - distrib: el8
            image: packaging-stream-connectors-alma8
            package_extension: rpm
          - distrib: el9
            image: packaging-stream-connectors-alma9
            package_extension: rpm
          - distrib: bullseye
            image: packaging-stream-connectors-bullseye
            package_extension: deb
    name: package ${{ matrix.distrib }}
    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:latest
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    steps:
      - uses: actions/checkout@v3

      - if: ${{ matrix.package_extension == 'rpm' }}
        run: |
          yum install -y yum-utils
          yum config-manager --set-enabled crb || true # alma 9
          yum config-manager --set-enabled powertools || true # alma 8
          yum install -y lua lua-devel
          mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}

          cd modules
          tar czf ~/rpmbuild/SOURCES/centreon-stream-connectors-lib.tar.gz centreon-stream-connectors-lib
          cd ..

          rpmbuild -ba packaging/connectors-lib/rpm/centreon-stream-connectors-lib.spec

          mv ~/rpmbuild/RPMS/**/*.rpm ./
        shell: bash

      - if: ${{ matrix.package_extension == 'deb' }}
        run: |
          PACKAGE_VERSION=`cat packaging/connectors-lib/deb/control | grep "^Version:" | cut -d" " -f2`
          mkdir -p centreon-stream-connectors-lib-$PACKAGE_VERSION/debian

          cp -rp modules/centreon-stream-connectors-lib/* centreon-stream-connectors-lib-$PACKAGE_VERSION/
          cp -rp packaging/connectors-lib/deb/* centreon-stream-connectors-lib-$PACKAGE_VERSION/debian/

          tar czf centreon-stream-connectors-lib-$PACKAGE_VERSION.tar.gz centreon-stream-connectors-lib-$PACKAGE_VERSION

          cd centreon-stream-connectors-lib-$PACKAGE_VERSION

          debmake -f "centreon" -e "contact@centreon.com" -y -r ${{ matrix.distrib }}
          debuild-pbuilder --no-lintian
        shell: bash

      - if: ${{ matrix.package_extension == 'deb' }}
        uses: actions/cache@v3
        with:
          path: ./*.${{ matrix.package_extension }}
          key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}

      - if: ${{ matrix.package_extension == 'rpm' }}
        uses: actions/cache@v3
        with:
          path: ./*.${{ matrix.package_extension }}
          key: unsigned-${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}

  sign-rpm:
    needs: [package]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [el8, el9]
    name: sign rpm ${{ matrix.distrib }}
    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/rpm-signing:ubuntu
      options: -t
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    steps:
      - run: apt-get install -y zstd
        shell: bash

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: unsigned-${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}

      - run: echo "HOME=/root" >> $GITHUB_ENV
        shell: bash

      - run: rpmsign --addsign ./*.rpm
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}

  deliver-rpm:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment, sign-rpm]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [el8, el9]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Publish RPM packages
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: stream-connectors-lib
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}

  deliver-deb:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment, package]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [bullseye]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Publish DEB packages
        uses: ./.github/actions/deb-delivery
        with:
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
