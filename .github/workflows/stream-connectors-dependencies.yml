name: stream-connectors-dependencies

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - dependencies/**
      - '.github/workflows/stream-connectors-dependencies.yml'
  push:
    branches:
      - develop
      - master
    paths:
      - dependencies/**
      - '.github/workflows/stream-connectors-dependencies.yml'

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml

  package:
    needs: [get-environment]

    strategy:
      fail-fast: false
      matrix:
        distrib: [el8, el9, bullseye]
        include:
          - package_extension: rpm
            image: packaging-stream-connectors-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-stream-connectors-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-stream-connectors-bullseye
            distrib: bullseye

    runs-on: ubuntu-22.04

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:latest
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Package
        uses: ./.github/actions/package-nfpm
        with:
          nfpm_file_pattern: "dependencies/*.yaml"
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          arch: all
          commit_hash: ${{ github.sha }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}

  deliver-rpm:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [el8, el9]
        lib: [lua-cffi, lua-tz, lua-curl]
    name: deliver ${{ matrix.distrib }} ${{ matrix.lib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish RPM packages
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: stream-connectors-dependencies
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-${{ matrix.lib }}-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}

  deliver-deb:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment, package-deb]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [bullseye]
        lib: [lua-cffi, lua-tz]
    name: deliver ${{ matrix.distrib }} ${{ matrix.lib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish DEB packages
        uses: ./.github/actions/deb-delivery
        with:
          module_name: stream-connectors-dependencies
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-${{ matrix.lib }}-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
