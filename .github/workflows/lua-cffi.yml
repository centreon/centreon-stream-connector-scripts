name: lua-cffi

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - dependencies/lua-cffi/**
  push:
    branches:
      - develop
      - master
    paths:
      - dependencies/lua-cffi/**

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml

  package:
    needs: [get-environment]

    strategy:
      fail-fast: false
      matrix:
        distrib: [el8, el9, bullseye]
        include:
          - package_extension: rpm
            image: packaging-stream-connectors-alma8
            distrib: el8
          - package_extension: rpm
            image: packaging-stream-connectors-alma9
            distrib: el9
          - package_extension: deb
            image: packaging-stream-connectors-bullseye
            distrib: bullseye

    runs-on: ubuntu-22.04

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:latest
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install dependencies
        run: |
          if  [ "${{ matrix.package_extension }}" = "rpm" ]; then
            dnf install -y make gcc luarocks meson gcc-c++ cmake libffi libffi-devel
          else
            apt-get update
            apt-get install -y make gcc luarocks meson cmake libffi7 libffi-dev
          fi
        shell: bash

      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: "q66/cffi-lua"
          ref: "v0.2.3"

      - name: Prepare packaging of lua-cffi
        run: |
          #luarocks install cffi-lua
          #luarocks show cffi-lua | grep "cffi-lua\s[0-9]" | cut -d' ' -f2 | perl -nle 'm/(\d+\.\d+(\.\d+)?)/; print $1' >> version.txt
          #cat version.txt
          cd cffi-lua
          mkdir build
          cd build
          meson .. -Dlua_version=5.3
          ninja all
          cd ..
          mkdir -p lua-cffi/lua-cffi
          mv build/cffi.so lua-cffi/lua-cffi/


          #mkdir lua-cffi
          #find /usr/ -type f -name "cffi.so" -exec cp {} lua-cffi/ \;
        working-directory: dependencies/lua-cffi
        shell: bash

      - name: Export package version
        id: package-version
        run: echo "package_version=0.2.3" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: dependencies/lua-cffi

      - name: Package
        uses: ./.github/actions/package-nfpm
        with:
          nfpm_file_pattern: "dependencies/lua-cffi/packaging/*.yaml"
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          arch: amd64
          version: ${{ steps.package-version.outputs.package_version }}
          commit_hash: ${{ github.sha }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}

  deliver-rpm:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment, package]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [el8, el9]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish RPM packages
        uses: ./.github/actions/rpm-delivery
        with:
          module_name: lua-cffi
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-rpm-lua-cffi-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}

  deliver-deb:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-environment.outputs.stability) }}
    needs: [get-environment, package]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distrib: [bullseye]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish DEB packages
        uses: ./.github/actions/deb-delivery
        with:
          module_name: lua-cffi
          distrib: ${{ matrix.distrib }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-deb-lua-cffi-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
